name: ♾️ CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-chart:
    name: 🔍 Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Helm lint
        run: helm lint helm-chart

      - name: Helm template test
        run: helm template helm-chart --debug

  build-and-push-chart:
    name: 🛠️ Build & Publish Helm Chart
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # need full history for git tags

      - uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Package & index chart
        run: |
          mkdir -p packaged
          helm package helm-chart --destination packaged
          helm repo index packaged --url https://anirudhk-tech.github.io/storyboard_ai

      - name: Commit to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packaged
          publish_branch: gh-pages
          user_name: github-actions
          user_email: github-actions@github.com

  build-and-push-docker:
    name: 🛠️ Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: lint-chart
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push images
        run: |
          docker build \
            --file client/Dockerfile \
            --build-arg OPENAI_KEY=${{ secrets.OPENAI_KEY }} \
            --build-arg OPENAI_ACTIVE=${{ secrets.OPENAI_ACTIVE }} \
            --tag anirudhktech/story-board-frontend:latest \
            client
          docker push anirudhktech/story-board-frontend:latest

          docker build \
            --file server/Dockerfile \
            --tag anirudhktech/story-board-backend:latest \
            server
          docker push anirudhktech/story-board-backend:latest

          docker build \
            --file nginx/Dockerfile \
            --tag anirudhktech/story-board-nginx:latest \
            nginx
          docker push anirudhktech/story-board-nginx:latest
  deploy-terraform:
    name: 🚀 Deploy with Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_helm_repo_url: https://anirudhk-tech.github.io/storyboard_ai/
      TF_VAR_helm_release_name: storyboard
      TF_VAR_openai_key: ${{ secrets.OPENAI_KEY }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    needs:
      - build-and-push-chart
      - build-and-push-docker
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan & Apply
        run: |
          terraform apply -replace="aws_instance.app" -auto-approve

      - name: Get App URL
        id: get-url
        run: |
          APP_HOST=$(terraform output -raw app_public_dns | head -n1)
          echo "app_url=http://${APP_HOST}" >> $GITHUB_OUTPUT

      - name: Show app URL
        run: |
          echo "🎉 App URL is ${{ steps.get-url.outputs.app_url }}"
