version: "3.8" # Compose file version

services:
  db: # PostgreSQL database service
    image: postgres:15-alpine # Use the official PostgreSQL image
    restart: always # Restart policy: Always restart on failure
    environment: # Environment variables for PostgreSQL
      POSTGRES_USER: sb_user
      POSTGRES_PASSWORD: sb_password
      POSTGRES_DB: storyboard
    volumes:
      - db-data:/var/lib/postgresql/data # Mount a volume for persistent data
    networks:
      - app-net # Connect to the app network

  backend: # Backend service
    build: # Building backend service
      context: ./server # Build context for the backend
      dockerfile: Dockerfile # Dockerfile for the backend
    depends_on:
      - db # Wait for the database to be ready
    environment: # Environment variables for the backend
      PORT: 4000
    expose:
      - "4000" # Expose port 4000 for the backend service
    networks:
      - app-net # Connect to the app network

  frontend: # Frontend service
    build:
      context: ./client # Build context for the kit service
      dockerfile: Dockerfile # Dockerfile for the kit service
    depends_on:
      - backend # Wait for the backend to be ready
    env_file:
      - .env # Load environment variables from .env file
    environment: # Environment variables for the kit service
      PORT: 3000
    expose:
      - "3000" # Expose port 3000 for the kit service
    networks:
      - app-net # Connect to the app network

  nginx:
    build:
      context: ./nginx # Build context for the Nginx service
      dockerfile: Dockerfile # Dockerfile for the Nginx service
    depends_on:
      - frontend # Wait for the kit service to be ready
      - backend # Wait for the backend service to be ready
    ports:
      - "80:80" # Map port 80 on the host to port 80 in the container
    networks:
      - app-net # Connect to the app network

volumes:
  db-data:

networks:
  app-net:
    driver: bridge
